// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.3
// source: stocks.proto

package goprotos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DbID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dbid string `protobuf:"bytes,1,opt,name=dbid,proto3" json:"dbid,omitempty"`
}

func (x *DbID) Reset() {
	*x = DbID{}
	mi := &file_stocks_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbID) ProtoMessage() {}

func (x *DbID) ProtoReflect() protoreflect.Message {
	mi := &file_stocks_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbID.ProtoReflect.Descriptor instead.
func (*DbID) Descriptor() ([]byte, []int) {
	return file_stocks_proto_rawDescGZIP(), []int{0}
}

func (x *DbID) GetDbid() string {
	if x != nil {
		return x.Dbid
	}
	return ""
}

type ShareSymbol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
}

func (x *ShareSymbol) Reset() {
	*x = ShareSymbol{}
	mi := &file_stocks_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShareSymbol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareSymbol) ProtoMessage() {}

func (x *ShareSymbol) ProtoReflect() protoreflect.Message {
	mi := &file_stocks_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareSymbol.ProtoReflect.Descriptor instead.
func (*ShareSymbol) Descriptor() ([]byte, []int) {
	return file_stocks_proto_rawDescGZIP(), []int{1}
}

func (x *ShareSymbol) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type SharePrice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Price  *float32 `protobuf:"fixed32,2,opt,name=price,proto3,oneof" json:"price,omitempty"`
}

func (x *SharePrice) Reset() {
	*x = SharePrice{}
	mi := &file_stocks_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SharePrice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharePrice) ProtoMessage() {}

func (x *SharePrice) ProtoReflect() protoreflect.Message {
	mi := &file_stocks_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharePrice.ProtoReflect.Descriptor instead.
func (*SharePrice) Descriptor() ([]byte, []int) {
	return file_stocks_proto_rawDescGZIP(), []int{2}
}

func (x *SharePrice) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SharePrice) GetPrice() float32 {
	if x != nil && x.Price != nil {
		return *x.Price
	}
	return 0
}

type NotingTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dbid   string  `protobuf:"bytes,1,opt,name=dbid,proto3" json:"dbid,omitempty"`
	Symbol string  `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Qty    int32   `protobuf:"varint,3,opt,name=qty,proto3" json:"qty,omitempty"`
	Price  float32 `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
	Error  string  `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *NotingTransaction) Reset() {
	*x = NotingTransaction{}
	mi := &file_stocks_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotingTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotingTransaction) ProtoMessage() {}

func (x *NotingTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_stocks_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotingTransaction.ProtoReflect.Descriptor instead.
func (*NotingTransaction) Descriptor() ([]byte, []int) {
	return file_stocks_proto_rawDescGZIP(), []int{3}
}

func (x *NotingTransaction) GetDbid() string {
	if x != nil {
		return x.Dbid
	}
	return ""
}

func (x *NotingTransaction) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *NotingTransaction) GetQty() int32 {
	if x != nil {
		return x.Qty
	}
	return 0
}

func (x *NotingTransaction) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *NotingTransaction) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ShareQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dbid   string `protobuf:"bytes,1,opt,name=dbid,proto3" json:"dbid,omitempty"`
	Symbol string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
}

func (x *ShareQuery) Reset() {
	*x = ShareQuery{}
	mi := &file_stocks_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShareQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareQuery) ProtoMessage() {}

func (x *ShareQuery) ProtoReflect() protoreflect.Message {
	mi := &file_stocks_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareQuery.ProtoReflect.Descriptor instead.
func (*ShareQuery) Descriptor() ([]byte, []int) {
	return file_stocks_proto_rawDescGZIP(), []int{4}
}

func (x *ShareQuery) GetDbid() string {
	if x != nil {
		return x.Dbid
	}
	return ""
}

func (x *ShareQuery) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type ShareQtyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Qty int32 `protobuf:"varint,1,opt,name=qty,proto3" json:"qty,omitempty"`
}

func (x *ShareQtyResponse) Reset() {
	*x = ShareQtyResponse{}
	mi := &file_stocks_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShareQtyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareQtyResponse) ProtoMessage() {}

func (x *ShareQtyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stocks_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareQtyResponse.ProtoReflect.Descriptor instead.
func (*ShareQtyResponse) Descriptor() ([]byte, []int) {
	return file_stocks_proto_rawDescGZIP(), []int{5}
}

func (x *ShareQtyResponse) GetQty() int32 {
	if x != nil {
		return x.Qty
	}
	return 0
}

type FundResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fund float32 `protobuf:"fixed32,1,opt,name=fund,proto3" json:"fund,omitempty"`
}

func (x *FundResponse) Reset() {
	*x = FundResponse{}
	mi := &file_stocks_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FundResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FundResponse) ProtoMessage() {}

func (x *FundResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stocks_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FundResponse.ProtoReflect.Descriptor instead.
func (*FundResponse) Descriptor() ([]byte, []int) {
	return file_stocks_proto_rawDescGZIP(), []int{6}
}

func (x *FundResponse) GetFund() float32 {
	if x != nil {
		return x.Fund
	}
	return 0
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_stocks_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_stocks_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_stocks_proto_rawDescGZIP(), []int{7}
}

func (x *Message) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_stocks_proto protoreflect.FileDescriptor

var file_stocks_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1a,
	0x0a, 0x04, 0x44, 0x62, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x62, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x62, 0x69, 0x64, 0x22, 0x25, 0x0a, 0x0b, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x22, 0x49, 0x0a, 0x0a, 0x53, 0x68, 0x61, 0x72, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x88,
	0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x7d, 0x0a, 0x11,
	0x4e, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x62, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x62, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x10, 0x0a,
	0x03, 0x71, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x71, 0x74, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x38, 0x0a, 0x0a, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x62, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x62, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22, 0x24, 0x0a, 0x10, 0x53, 0x68, 0x61, 0x72, 0x65, 0x51, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x71, 0x74, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x71, 0x74, 0x79, 0x22, 0x22, 0x0a, 0x0c, 0x46,
	0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x66, 0x75, 0x6e, 0x64, 0x22,
	0x23, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x32, 0xe3, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1f, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x64, 0x12, 0x05, 0x2e, 0x44, 0x62, 0x49,
	0x44, 0x1a, 0x0d, 0x2e, 0x46, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2d, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x51, 0x74, 0x79, 0x12,
	0x0b, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x11, 0x2e, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x51, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x23, 0x0a, 0x03, 0x42, 0x75, 0x79, 0x12, 0x12, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x08, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x53, 0x65, 0x6c, 0x6c, 0x12, 0x12, 0x2e, 0x4e,
	0x6f, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x1a, 0x08, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x0c, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x1a, 0x0b, 0x2e,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x42, 0x21, 0x5a, 0x1f, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x67, 0x6f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x3b, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_stocks_proto_rawDescOnce sync.Once
	file_stocks_proto_rawDescData = file_stocks_proto_rawDesc
)

func file_stocks_proto_rawDescGZIP() []byte {
	file_stocks_proto_rawDescOnce.Do(func() {
		file_stocks_proto_rawDescData = protoimpl.X.CompressGZIP(file_stocks_proto_rawDescData)
	})
	return file_stocks_proto_rawDescData
}

var file_stocks_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_stocks_proto_goTypes = []any{
	(*DbID)(nil),              // 0: DbID
	(*ShareSymbol)(nil),       // 1: ShareSymbol
	(*SharePrice)(nil),        // 2: SharePrice
	(*NotingTransaction)(nil), // 3: NotingTransaction
	(*ShareQuery)(nil),        // 4: ShareQuery
	(*ShareQtyResponse)(nil),  // 5: ShareQtyResponse
	(*FundResponse)(nil),      // 6: FundResponse
	(*Message)(nil),           // 7: Message
}
var file_stocks_proto_depIdxs = []int32{
	0, // 0: RegisteringTransaction.GetFund:input_type -> DbID
	4, // 1: RegisteringTransaction.GetShareQty:input_type -> ShareQuery
	3, // 2: RegisteringTransaction.Buy:input_type -> NotingTransaction
	3, // 3: RegisteringTransaction.Sell:input_type -> NotingTransaction
	1, // 4: RegisteringTransaction.GetShareLivePrice:input_type -> ShareSymbol
	6, // 5: RegisteringTransaction.GetFund:output_type -> FundResponse
	5, // 6: RegisteringTransaction.GetShareQty:output_type -> ShareQtyResponse
	7, // 7: RegisteringTransaction.Buy:output_type -> Message
	7, // 8: RegisteringTransaction.Sell:output_type -> Message
	2, // 9: RegisteringTransaction.GetShareLivePrice:output_type -> SharePrice
	5, // [5:10] is the sub-list for method output_type
	0, // [0:5] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_stocks_proto_init() }
func file_stocks_proto_init() {
	if File_stocks_proto != nil {
		return
	}
	file_stocks_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_stocks_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_stocks_proto_goTypes,
		DependencyIndexes: file_stocks_proto_depIdxs,
		MessageInfos:      file_stocks_proto_msgTypes,
	}.Build()
	File_stocks_proto = out.File
	file_stocks_proto_rawDesc = nil
	file_stocks_proto_goTypes = nil
	file_stocks_proto_depIdxs = nil
}
